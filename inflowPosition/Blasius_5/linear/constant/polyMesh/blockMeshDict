/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (0 0 0)        // vertice # 0
    (50 0 0)       // vertice # 1
    (50 5 0)      // vertice # 2
    (0 5 0)       // vertice # 3
    (0 0 1)        // vertice # 4
    (50 0 1)       // vertice # 5
    (50 5 1)      // vertice # 6
    (0 5 1)       // vertice # 7
    (0 10 0)      // vertice # 8
    (50 10 0)     // vertice # 9
    (0 10 1)      // vertice # 10
    (50 10 1)     // vertice # 11
    (-5 0 0)      // vertice # 12
    (-5 0 1)      // vertice # 13
    (-5 5 0)     // vertice # 14
    (-5 5 1)     // vertice # 15
    (-5 10 0)    // vertice # 16
    (-5 10 1)    // vertice # 17
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (100 20 1) simpleGrading (2 2 1)  // block # 0
    hex (3 2 9 8 7 6 11 10) (100 7 1) simpleGrading (2 2 1)  // block # 1
    hex (12 0 3 14 13 4 7 15) (7 20 1) simpleGrading (.5 2 1)  // block # 2
    hex (14 3 8 16 15 7 10 17) (7 7 1) simpleGrading (.5 2 1)  // block # 3
);

edges
(
);

boundary
(
    top
    {
        type outlet;
        faces
        (
            (8 10 11 9)
            (16 17 10 8)
        );
    }

    inlet
    {
        type wall;
        faces
        (
            (14 15 17 16)
            (12 13 15 14)
        );
    }

    outlet
    {
        type wall;
        faces
        (
            (9 11 6 2)
            (2 6 5 1)
        );
    }

    plate
    {
        type wall;
        faces
        (
            (0 1 5 4)
        );
    }

    symmBound
    {
        type wall;
        faces
        (
            (12 0 4 13)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (3 2 1 0)
            (7 4 5 6)
            (8 9 2 3)
            (10 7 6 11)
            (14 3 0 12)
            (15 13 4 7)
            (16 8 3 14)
            (17 15 7 10)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
